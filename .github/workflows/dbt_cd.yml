name: dbt-core Continuous Delivery

on:
  push:
    branches:
      - main

jobs:
  dbt:
    runs-on: ubuntu-latest

    env:
      GCS_BUCKET: ${{ secrets.GCS_BUCKET }}

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4


      - name: Instalar o Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH


      - name: Instalar dependências
        run: |
          poetry install


      - name: Importar Credenciais do BigQuery e Google Cloud Storage
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: |
          echo "$GOOGLE_CREDENTIALS" > /home/runner/gcp-key.json
          export GOOGLE_APPLICATION_CREDENTIALS="/home/runner/gcp-key.json"


      - name: Autenticar no Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}


      - name: Configurar Google Cloud Storage
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'
          install_components: 'gsutil'


      - name: Testar conexão com BigQuery
        working-directory: ./dbt_project
        run: |
          poetry run dbt debug --target prod


      - name: Baixar manifest.json de prod do Google Cloud Storage
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: |
          mkdir -p dbt_project/target
          gsutil cp gs://${{ env.GCS_BUCKET }}/manifest.json dbt_project/target_prod/manifest.json


      - name: Compilar modelos dbt
        working-directory: ./dbt_project
        run: |
          poetry run dbt compile --target prod


      - name: Fazer deploy dos modelos em produção
        working-directory: ./dbt_project
        run: |
          poetry run dbt build --target prod --state target_prod --select state:modified+


      - name: Atualizar o manifest.json do projeto
        working-directory: ./dbt_project
        run: |
          gsutil cp target/manifest.json gs://${{ env.GCS_BUCKET }}/manifest.json
